{"mappings":"YAAO,ICCDA,EAAWC,SAASC,cAAc,cDA7BC,MAAM,8CACRC,MAAK,SAAAC,GACF,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,M,ICFvBL,MAAK,SAACM,G,OAGX,SAAwBA,GACtB,IAAMC,EAASD,EACZE,KAAI,SAACC,GACJ,MAAO,mCAEgBC,OADDD,EAAKE,KAAK,qCAEPD,OADFD,EAAKG,MAAM,uCACSF,OAAlBD,EAAKI,QAAQF,KAAK,sB,IAG5CG,KAAK,IACNlB,EAASmB,UAAYR,C,CAbJS,CAAeV,E,IAC/BW,OAAM,SAACC,G,OAAUC,QAAQC,IAAIF,E,IAiBlCC,QAAQC,IAAIC,MAAMC,QADR,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,K","sources":["src/js/fetch.js","src/index.js"],"sourcesContent":["export const fetchApi = () => {\n    return fetch(\"https://jsonplaceholder.typicode.com/users\")\n        .then(response => {\n            if (!response.ok) {\n                throw new Error(response.status);\n            }\n            return response.json();\n        })\n}","import { fetchApi } from './js/fetch';\nconst userList = document.querySelector('.user-list');\n\nfetchApi()\n    .then((users) => renderUserList(users))\n    .catch((error) => console.log(error));\n\nfunction renderUserList(users) {\n  const markup = users\n    .map((user) => {\n      return `<li>\n          <p><b>Name</b>: ${user.name}</p>\n          <p><b>Email</b>: ${user.email}</p>\n          <p><b>Company</b>: ${user.company.name}</p>\n        </li>`;\n    })\n    .join(\"\");\n    userList.innerHTML = markup;\n    \n}\n\nlet dbb = [1, 2, 4, 5, 66, 6, 44];\nconsole.log(Array.isArray(dbb));"],"names":["$b8f9b7833fa37166$var$userList","document","querySelector","fetch","then","response","ok","Error","status","json","users","markup","map","user","concat","name","email","company","join","innerHTML","$b8f9b7833fa37166$var$renderUserList","catch","error","console","log","Array","isArray"],"version":3,"file":"index.4c3bd632.js.map"}